int		ft_testview(t_all *all)
{
	void	*mlx;
	void	*mlx_win;
	int 	i;

	mlx = mlx_init();
	mlx_win = mlx_new_window(mlx, all->x_screen, all->y_screen, "Hello world!");
	//Raycasting, ma fonction appelée à chaque tour. 
	//mlx_loop_hook(mlx, rayacasting, all);
	img.img = mlx_new_image(mlx, all->x_screen, all->y_screen);
	img.addr = mlx_get_data_addr(img.img, &img.bits_per_pixel, &img.line_length,
								 &img.endian);
		mlx_loop(mlx);
	img = img + 0;
	all->isok +=10000;
	return(0);
}



void	ft_colplot(t_all *all)
{
	int	i;
	int	bord;

	all->vertl = (int)(all->y_screen / (all->walldist + 0.00001));
	i = 0;
	bord = (all->y_screen - all->vertl);
	if (bord < 0)
		bord = 0;
	while (i < bord / 2)
	{
		my_mlx_pixel_put(all, all->col, i, all->floor_rgb);
		my_mlx_pixel_put(all, all->col, all->y_screen - i, all->ceil_rgb);		
		i++;
	}
	while (i < all->y_screen - bord / 2)
	{
		my_mlx_pixel_put(all, all->col, i, 60000 + all->side * 10000);
		i++;
	}
	if (i < all->y_screen)
		my_mlx_pixel_put(all, all->col, i, 60000 + all->side * 10000);
}



all->verstep = 1.0 * all->text[all->side].height / all->vertl;
	i = 0;
	bord = (all->y_screen - all->vertl);
	if (bord < 0)
		bord = 0;
	while (i < bord / 2)
	{
		my_mlx_pixel_put(all, all->col, i, all->floor_rgb);
		my_mlx_pixel_put(all, all->col, all->y_screen - i, all->ceil_rgb);		
		i++;
	}
	while (i < all->y_screen - bord / 2)
	{
		all->ytex = (int)((i - bord / 2) * all->verstep);
		*(unsigned int *)(all->addr + (i * all->line_length + all->col * 4)) = 
		*(unsigned int *)(all->text[all->side].add +  all->ytex * all->text[all->side].line_length + all->xtex * 4);
//		my_mlx_pixel_put(all, all->col, i, all->text[0].img[all->xtex][all->ytex]);
		i++;
	}
	if (i < all->y_screen)
		my_mlx_pixel_put(all, all->col, i, 60000 + all->side * 10000);